webpackJsonp([1],{"1J/o":function(e,i,t){"use strict";(function(e){t.d(i,"a",function(){return o}),t.d(i,"c",function(){return n}),t.d(i,"b",function(){return r});var n={uniforms:{tDiffuse:{value:null},lightPosition:{value:new e.Vector3(.5,.5,-400)},exposure:{value:.18},decay:{value:.965},density:{value:.8},weight:{value:.4},samples:{value:90}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D tDiffuse;","uniform vec2 lightPosition;","uniform float exposure;","uniform float decay;","uniform float density;","uniform float weight;","uniform int samples;","const int MAX_SAMPLES = 100;","void main()","{","vec2 texCoord = vUv;","vec2 deltaTextCoord = texCoord - lightPosition;","deltaTextCoord *= 1.0 / float(samples) * density;","vec4 color = texture2D(tDiffuse, texCoord);","float illuminationDecay = 1.0;","for(int i=0; i < MAX_SAMPLES; i++)","{","if(i == samples){","break;","}","texCoord -= deltaTextCoord;","vec4 sample = texture2D(tDiffuse, texCoord);","sample *= illuminationDecay * weight;","color += sample;","illuminationDecay *= decay;","}","gl_FragColor = color * exposure;","}"].join("\n")},o={uniforms:{tDiffuse:{value:null},tAdd:{value:null}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform sampler2D tAdd;","varying vec2 vUv;","void main() {","vec4 color = texture2D( tDiffuse, vUv );","vec4 add = texture2D( tAdd, vUv );","gl_FragColor = color + add;","}"].join("\n")},r=([].join("\n"),["varying vec2 vUv;","varying vec2 v_rgbNW;","varying vec2 v_rgbNE;","varying vec2 v_rgbSW;","varying vec2 v_rgbSE;","varying vec2 v_rgbM;","uniform vec2 resolution;","void main() {","vUv = uv;","vec2 fragCoord = uv * resolution;","vec2 inverseVP = 1.0 / resolution.xy;","v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;","v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;","v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;","v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;","v_rgbM = vec2(fragCoord * inverseVP);","gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);","}"].join("\n"),{uniforms:{tDiffuse:{type:"t",value:null},time:{type:"f",value:0},distortion:{type:"f",value:3},distortion2:{type:"f",value:5},speed:{type:"f",value:.2},rollSpeed:{type:"f",value:.1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float time;","uniform float distortion;","uniform float distortion2;","uniform float speed;","uniform float rollSpeed;","varying vec2 vUv;","vec3 mod289(vec3 x) {","  return x - floor(x * (1.0 / 289.0)) * 289.0;","}","vec2 mod289(vec2 x) {","  return x - floor(x * (1.0 / 289.0)) * 289.0;","}","vec3 permute(vec3 x) {","  return mod289(((x*34.0)+1.0)*x);","}","float snoise(vec2 v)","  {","  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0","                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)","                     -0.577350269189626,  // -1.0 + 2.0 * C.x","                      0.024390243902439); // 1.0 / 41.0","  vec2 i  = floor(v + dot(v, C.yy) );","  vec2 x0 = v -   i + dot(i, C.xx);","  vec2 i1;","  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);","  vec4 x12 = x0.xyxy + C.xxzz;"," x12.xy -= i1;","  i = mod289(i); // Avoid truncation effects in permutation","  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))","\t\t+ i.x + vec3(0.0, i1.x, 1.0 ));","  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);","  m = m*m ;","  m = m*m ;","  vec3 x = 2.0 * fract(p * C.www) - 1.0;","  vec3 h = abs(x) - 0.5;","  vec3 ox = floor(x + 0.5);","  vec3 a0 = x - ox;","  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );","  vec3 g;","  g.x  = a0.x  * x0.x  + h.x  * x0.y;","  g.yz = a0.yz * x12.xz + h.yz * x12.yw;","  return 130.0 * dot(m, g);","}","void main() {","vec2 p = vUv;","float ty = time*speed;","float yt = p.y - ty;","float offset = snoise(vec2(yt*3.0,0.0))*0.2;","offset = offset*distortion * offset*distortion * offset;","offset += snoise(vec2(yt*50.0,0.0))*distortion2*0.001;","gl_FragColor = texture2D(tDiffuse,  vec2(fract(p.x + offset),fract(p.y-time*rollSpeed) ));","}"].join("\n")});["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 base = texture2D( tDiffuse, vUv );","vec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );","float lum = dot( lumCoeff, base.rgb );","vec3 blend = vec3( lum );","float L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );","vec3 result1 = 2.0 * base.rgb * blend;","vec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );","vec3 newColor = mix( result1, result2, L );","float A2 = opacity * base.a;","vec3 mixRGB = A2 * newColor.rgb;","mixRGB += ( ( 1.0 - A2 ) * base.rgb );","gl_FragColor = vec4( mixRGB, base.a );","}"].join("\n"),["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),["uniform sampler2D tDiffuse;","uniform float v;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;","gl_FragColor = sum;","}"].join("\n"),["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),["uniform sampler2D tDiffuse;","uniform float h;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;","gl_FragColor = sum;","}"].join("\n")}).call(i,t("ULho"))},eslX:function(e,i,t){"use strict";Object.defineProperty(i,"__esModule",{value:!0});t("pTlp");var n=t("Zrlr"),o=t.n(n),r=t("wxAW"),s=t.n(r),v=t("ULho"),a=t("+vOu"),c=t.n(a),u=t("1J/o"),l=t("+Uzz");t("wq8g");new(function(){function e(){o()(this,e),this.OCCLUSION_LAYER=1,this.DEFAULT_LAYER=0,window.THREE=v,this.setupCanvas(),this.createScene3d(),this.createPostProcessing(),window.addEventListener("resize",this.resizeCanvas.bind(this)),window.addEventListener("mousemove",this.onMouseMove.bind(this)),this.animate()}return s()(e,[{key:"setupCanvas",value:function(){this.canvas=document.querySelector("#canvas"),this.renderer=new v.WebGLRenderer({canvas:canvas}),this.scene=new v.Scene,this.camera=new v.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(window.innerWidth,window.innerHeight)}},{key:"resizeCanvas",value:function(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight),this.canvas.setAttribute("width",window.innerWidth),this.canvas.setAttribute("height",window.innerHeight),this.canvas.style.width=window.innerWidth+"px",this.canvas.style.height=window.innerHeight+"px",this.composer.setSize(window.innerWidth,window.innerHeight),this.occlusionComposer.setSize(window.innerWidth,window.innerHeight)}},{key:"createScene3d",value:function(){var e=new v.AmbientLight(2899536);this.scene.add(e);(new v.TextureLoader).load("static/textures/alpha_gradient.jpg");var i=(new v.TextureLoader).load("static/textures/alpha.jpg"),t=new v.PlaneBufferGeometry(1,1,1),n=new v.MeshBasicMaterial({color:16777215,alphaMap:i});n.transparent=!0,this.lightSphere=new v.Mesh(t,n),this.lightSphere.layers.set(this.OCCLUSION_LAYER),this.scene.add(this.lightSphere),t=new v.PlaneBufferGeometry(1,1,1),(n=new v.MeshBasicMaterial({color:0,alphaMap:i})).transparent=!0,this.occlusionPlane=new v.Mesh(t,n),this.occlusionPlane.position.z=2,this.occlusionPlane.position.y=-0,this.occlusionPlane.layers.set(this.OCCLUSION_LAYER);var o=new v.MeshBasicMaterial({color:0,alphaMap:i});o.transparent=!0,this.plane=new v.Mesh(t,o),this.plane.position.z=2,this.plane.layers.set(this.DEFAULT_LAYER),this.scene.add(this.plane),this.camera.position.z=4,window.camera=this.camera}},{key:"createPostProcessing",value:function(){this.occlusionRenderTarget=new v.WebGLRenderTarget(window.innerWidth,window.innerHeight),this.occlusionComposer=new c.a(this.renderer,this.occlusionRenderTarget),this.occlusionComposer.addPass(new a.RenderPass(this.scene,this.camera));var e=new a.ShaderPass(u.c);e.needsSwap=!1,this.occlusionComposer.addPass(e),this.composer=new c.a(this.renderer),this.composer.addPass(new a.RenderPass(this.scene,this.camera));var i=new a.ShaderPass(u.a);window.occlusionRenderTarget=this.occlusionRenderTarget,i.uniforms.tAdd.value=window.occlusionRenderTarget.texture,this.composer.addPass(i),i.renderToScreen=!0,this.badTVPass=new a.ShaderPass(u.b)}},{key:"animate",value:function(e){this.camera.layers.set(this.OCCLUSION_LAYER),this.renderer.setClearColor(0),this.occlusionComposer.render(),this.camera.layers.set(this.DEFAULT_LAYER),this.renderer.setClearColor(0),this.composer.render(),window.requestAnimationFrame(this.animate.bind(this))}},{key:"onMouseMove",value:function(e){var i=(e.clientX-window.innerWidth/2)/window.innerWidth,t=(e.clientY-window.innerHeight/2)/window.innerHeight;l.TweenMax.to(this.lightSphere.position,10,{x:i,y:-t,ease:l.Quint.easeOut}),l.TweenMax.to(this.occlusionPlane.rotation,10,{y:i,x:t,ease:l.Quint.easeOut}),l.TweenMax.to(this.occlusionPlane.position,10,{x:i,y:-t,ease:l.Quint.easeOut})}}]),e}())},pTlp:function(e,i){}},["eslX"]);
//# sourceMappingURL=app.b9adda8136068f05b238.js.map